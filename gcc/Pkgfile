# Description:	The GNU Compiler Collection
# URL:		http://gcc.gnu.org
# Maintainer:	sajcho, saux dot aarch64 at gmail dot com
# Depends on:	isl mpc zstd

name=gcc
version=14.1.0
release=1
source=(https://sourceware.org/pub/${name}/releases/${name}-${version}/${name}-${version}.tar.xz \
	50_all_cpu_indicator.patch \
	50_all_libssp_unconditionally.patch \
	50_all_posix_memalign.patch \
	50_all_sanitizer_lfs.patch
	c89 c99)

build() {
	cd ${name}-${version}

	patch -p1 -i $SRC/50_all_cpu_indicator.patch
	patch -p1 -i $SRC/50_all_libssp_unconditionally.patch
	patch -p1 -i $SRC/50_all_posix_memalign.patch
	#patch -p1 -i $SRC/50_all_sanitizer_lfs.patch

	sed -i 's|lib64|lib|' $SRC/${name}-${version}/${name}/config/i386/t-linux64
	sed -i 's|lib64|lib|' $SRC/${name}-${version}/${name}/config/i386/linux64.h

	export CFLAGS="${CFLAGS/ -flto=auto -ffat-lto-objects/}"
	export CXXFLAGS="${CXXFLAGS/ -flto=auto -ffat-lto-objects/}"

	mkdir build
	cd build

	../configure \
		--build=$CHOST \
		--host=$CHOST \
		--prefix=/usr \
		--libexecdir=/usr/lib \
		--enable-bootstrap \
		--enable-languages=c,c++,fortran,lto \
		--enable-plugin \
		--enable-shared \
		--enable-threads=posix \
		--enable-__cxa_atexit \
		--enable-clocale=gnu \
		--enable-initfini-array \
		--enable-linker-build-id \
		--enable-checking=release \
		--enable-link-serialization=1 \
		--enable-gnu-indirect-function \
		--enable-gnu-unique-object \
		--enable-libstdcxx-backtrace \
		--disable-nls \
		--disable-multilib \
		--disable-libunwind-exceptions \
		--with-isl \
		--with-system-zlib \
		--with-linker-hash-style=gnu \
		--with-build-config=bootstrap-lto \
		--with-pkgversion="SAUX-x86_64" \
		--without-cuda-driver

	make V=1 \
		BOOT_CFLAGS="-O2 -mtune=generic -Wall -Wformat-security" \
		LDFLAGS_FOR_TARGET="-Wl,-z,relro,-z,now" \
		profiledbootstrap

	# Optional
	#make -k check || :
	#$SRC/${name}-${version}/contrib/test_summary \
	#	> $PKGMK_PACKAGE_DIR/${name}-${version}-check-result.txt

	make -j1 DESTDIR=$PKG install

	mkdir $PKG/lib
	ln -sf ../usr/bin/cpp $PKG/lib/cpp
	ln -sf gcc $PKG/usr/bin/cc
	ln -sf g++ $PKG/usr/bin/c++

	# Add a compatibility symlink to enable building programs
	# with Link Time Optimization (LTO):
	install -d $PKG/usr/lib/bfd-plugins
	ln -sf ../../lib/gcc/$CHOST/${version}/liblto_plugin.so \
		$PKG/usr/lib/bfd-plugins/

	install -d -m 0755 $PKG/usr/share/gdb/auto-load/usr/lib
	mv $PKG/usr/lib/libstdc++.so.*-gdb.py $PKG/usr/share/gdb/auto-load/usr/lib

	install -m 0755 $SRC/{c89,c99} $PKG/usr/bin

	rm -r $PKG/usr/bin/*-linux-musl-*
	rm -r $PKG/usr/share/{info,${name}-${version}}
	rm -r $PKG/usr/lib/${name}/$CHOST/${version}/{install-tools,include-fixed}

	# Create triplet symlinks
	for f in $PKG/usr/bin/*; do
		ln -s ${f##*/} $PKG/usr/bin/$CHOST-${f##*/}
	done
}
